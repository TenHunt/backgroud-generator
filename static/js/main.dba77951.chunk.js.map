{"version":3,"sources":["components/card-components/card.components.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","Cardlist","console","log","monsters","map","SearchBox","placeholder","handleChnage","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","Response","json","users","this","filterMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAEaA,G,MAAO,SAACC,GAAD,OAChB,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAM,UAAUC,IAAG,+BAA4BH,EAAMI,QAAQC,GAA1C,4BACxB,oCAAQL,EAAMI,QAAQE,KAAtB,OACA,4BAAKN,EAAMI,QAAQG,aCAdC,G,MAAW,SAACR,GAErB,OADAS,QAAQC,IAAIV,GACL,qBAAKC,UAAY,YAAjB,SAEHD,EAAMW,SAASC,KAAI,SAAAR,GAAO,OACxB,cAAC,EAAD,CAAwBA,QAAWA,GAAvBA,EAAQC,WCPjBQ,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACAd,UAAY,SACZe,KAAO,SACPF,YAAgBA,EAChBG,SAAYF,MCgCDG,G,wDAlCb,aAAe,IAAD,8BACZ,gBAOFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SANtC,EAAKC,MAAQ,CACTb,SAAU,GACVU,YAAa,IALL,E,gEAWK,IAAD,OAClBI,MAAM,8CACLC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAWkB,S,+BAE/B,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAiBpB,EAASqB,QAAO,SAAA5B,GAAO,OAAIA,EAAQE,KAAK2B,cAAcC,SAASb,EAAYc,wBAElG,OACE,sBAAKlC,UAAU,MAAf,UACA,oDACA,cAAC,EAAD,CACCa,YAAc,kBACdC,aAAkBe,KAAKf,eAExB,cAAC,EAAD,CAAUJ,SAAYoB,W,GA5BVK,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dba77951.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\nexport const Card = (props) => (\r\n    <div className = 'card-container'> \r\n        <img alt = \"monster\" src = {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h2>  { props.monster.name } </h2>\r\n        <p>{ props.monster.email }</p>\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport { Card } from '../card-components/card.components';\r\n\r\nimport './card-list.style.css';\r\n\r\nexport const Cardlist = (props) => {\r\n    console.log(props);\r\n    return(<div className = 'test-list'>      \r\n    {\r\n        props.monsters.map(monster => (\r\n          <Card key= {monster.id} monster = {monster}/>  \r\n        ))\r\n    }\r\n    </div>);\r\n}\r\n","import React from 'react';\r\n\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChnage}) => (\r\n    <input \r\n    className = 'search'\r\n    type = 'search' \r\n    placeholder = { placeholder}\r\n    onChange = {handleChnage}\r\n      />\r\n)","import React, { Component } from 'react';\nimport { Cardlist } from './components/card-list/card-list.component.jsx';\nimport { SearchBox } from './components/search-box/search-box.component.jsx';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n        monsters: [],\n        searchField: ''\n    };\n  }\n  handleChnage = e => {\n    this.setState({ searchField: e.target.value});\n  };\ncomponentDidMount() {\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then( Response => Response.json())\n  .then(users => this.setState({monsters : users}));\n}\n  render() {\n    const { monsters, searchField } = this.state; \n    const filterMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()) //This includ emethodis used to search the valuein the array monster.name\n    );\n    return (     \n      <div className=\"App\">\n      <h1> Monsters Rolodex </h1>\n      <SearchBox \n       placeholder = 'Search Monsters'\n       handleChnage =  { this.handleChnage }\n      /> \n      <Cardlist monsters = {filterMonsters}/>\n    </div>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}